# Load data and plot
track.folder = '/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/bams/'
# Add BAM info
sample.meta = data.frame(SampleName = gsub('.bam', '' , grep('bam$', list.files(track.folder), value = T))) # change from bw/bam
View(sample.meta)
sample.meta <- sample.meta %>%
mutate(Type = str_extract(SampleName, "^[^_]+")) %>%
mutate(Group = str_extract(SampleName, 'viridis|concolor|lutosus|cerberus')) %>%
filter(Group != 'lutosus') %>% # remove lutosus for now because its ATAC-seq quality is bad
#filter(Type != 'CV1096') %>% # remove CV1096 for now because we don't have a genome
arrange(match(Group, c('viridis', 'concolor', 'cerberus')))
library(tidyverse)
library(ggcoverage)
# Load data and plot
track.folder = '/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/bams/'
# Add BAM info
sample.meta = data.frame(SampleName = gsub('.bam', '' , grep('bam$', list.files(track.folder), value = T))) # change from bw/bam
sample.meta <- sample.meta %>%
mutate(Type = str_extract(SampleName, "^[^_]+")) %>%
mutate(Group = str_extract(SampleName, 'viridis|concolor|lutosus|cerberus')) %>%
filter(Group != 'lutosus') %>% # remove lutosus for now because its ATAC-seq quality is bad
#filter(Type != 'CV1096') %>% # remove CV1096 for now because we don't have a genome
arrange(match(Group, c('viridis', 'concolor', 'cerberus')))
data.frame(SampleName = gsub('.bam', '' , grep('bam$', list.files(track.folder), value = T)))
?LoadTrackFile
track.df = LoadTrackFile(track.folder = track.folder, format = "bam", # change to bam/bw
bamcoverage.path = '/Users/sidgopalan/miniconda3/bin/bamCoverage',
meta.info = sample.meta,
single.nuc = T, # change to T for BAM, F for BigWig
single.nuc.region = paste0(chrom, ':', start_pos, '-', end_pos) # short hand for getting a region, change "region" to single.nuc.region for BAM, "region" for
)
# load regions of interest from bam files
chrom = "scaffold-mi2"
start_pos = floor(8923875 / 100 ) * 100 # denovopeak 1 8537054, denovopeak2 8852477,  CTCF peak 8923875
end_pos = ceiling(8924426 / 500 ) * 500 # denovopeak 1 8537582, denovopeak2 8852853,  CTCF peak 8924426
track.df = LoadTrackFile(track.folder = track.folder, format = "bam", # change to bam/bw
bamcoverage.path = '/Users/sidgopalan/miniconda3/bin/bamCoverage',
meta.info = sample.meta,
single.nuc = T, # change to T for BAM, F for BigWig
single.nuc.region = paste0(chrom, ':', start_pos, '-', end_pos) # short hand for getting a region, change "region" to single.nuc.region for BAM, "region" for
)
View(track.df)
#### Look at SVSP9 specifically ####
peakfile <- paste('../1_chromVAR/merged_peaks/allSample_mergedPeaks.bed', sep = '/')
peaks <- getPeaks(peakfile, sort_peaks = FALSE)
library(chromVAR)
peaks <- getPeaks(peakfile, sort_peaks = FALSE)
#### Look at SVSP9 specifically ####
peakfile <- paste('/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed', sep = '/')
peaks <- getPeaks(peakfile, sort_peaks = FALSE)
peaks <- resize(peaks, width = 500, fix = "center")
peaks
peaks <- resize(peaks, width = 500, fix = "center")
?getPeaks
peaks <- chromVAR::resize(peaks, width = 500, fix = "center")
#### Look at SVSP9 specifically ####
peakfile <- paste('/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed', sep = '/')
peaks <- chromVAR::getPeaks(peakfile, sort_peaks = FALSE)
peaks <- chromVAR::resize(peaks, width = 500, fix = "center")
peaks <- resize(peaks, width = 500, fix = "center")
peaks <- readNarrowpeaks(peakfile, width = 500, non_overlapping = F)
peaks <- readNarrowpeaks(peakfile, width = 500, non_overlapping = T)
peaks <- chromVAR::getPeaks(peakfile, sort_peaks = TRUE)
readNarrowpeaks(peaks, width = 500, non_overlapping = T)
#### Look at SVSP9 specifically ####
peakfile <- paste('/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed', sep = '/')
peaks <- readNarrowpeaks(peaks, width = 500, non_overlapping = T)
#### Look at SVSP9 specifically ####
peakfile <-'/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- readNarrowpeaks(peakfile, width = 500, non_overlapping = T)
#### Look at SVSP9 specifically ####
peakfile <-'/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- readNarrowpeaks(peakfile, width = 500, non_overlapping = T)
library(motifmatchr)
library(Matrix)
library(SummarizedExperiment)
library(BiocParallel)
#### Look at SVSP9 specifically ####
peakfile <-'/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- chromVAR::getPeaks(peakfile, sort_peaks = TRUE)
#### Look at SVSP9 specifically ####
peakfile <- '/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- getPeaks(peakfile, sort_peaks = TRUE)
peaks <- getPeaks(peakfile, sort_peaks = TRUE)
peaks <- resize(peaks, width = 500, fix = "center")
?resize
detach(SummarizedExperiment)
GenomicRanges::resize(peaks, width = 500, fix = "center")
SummarizedExperiment::resize(peaks, width = 500, fix = "center")
#### Look at SVSP9 specifically ####
peakfile <- '/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- getPeaks(peakfile, sort_peaks = TRUE)
peaks
SummarizedExperiment::resize(peaks, width = 500, fix = "center")
#### Look at SVSP9 specifically ####
peakfile <- '/Volumes/SeagatePortableDrive/12_snakeVenomVar/Figure_and_Scripts/3_ATACseq_comparisons/1_chromVAR/merged_peaks/allSample_mergedPeaks.bed'
peaks <- chromVAR::getPeaks(peakfile, sort_peaks = TRUE)
peaks <- SummarizedExperiment::resize(peaks, width = 500, fix = "center")
peak_shift <- 0
rect <- as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
mutate(Type = 'CV1090') %>%
slice(612, 713, 747) # 612 = de novo peak 1, 713 = de novo peak 2, 747 = CTCF peak
as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2')
as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
mutate(Type = 'CV1090')
as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
mutate(Type = 'CV1090') %>%
slice(612, 713, 747)
as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
mutate(Type = 'CV1090') %>%
dplyr::slice(612, 713, 747)
peak_shift <- 0
rect <- as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
mutate(Type = 'CV1090') %>%
dplyr::slice(612, 713, 747) # 612 = de novo peak 1, 713 = de novo peak 2, 747 = CTCF peak
#p3 <-
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
annotate(geom = "rect",
xmin = rect$start,
xmax = rect$end,
ymin = -Inf,
ymax = +Inf,
alpha = 0.2) +
geom_gene_arrow(data = example_genes, inherit.aes = F, aes(xmin = start, xmax = end, y = 40, fill="blue"), arrowhead_height = grid::unit(2, "mm"), arrow_body_height = grid::unit(1, "mm")) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
scale_x_continuous(limits = c(start_pos,end_pos), expand = c(0,0), labels = label_number(scale = 1e-6), breaks = pretty_breaks(n=3)) +
scale_y_continuous(breaks = pretty_breaks(n=2)) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
plot.margin = margin(10,5,5,5),
#strip.text.y = element_blank()
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
scale_fill_manual(values = c("viridis" = "#2E8B58",
"concolor" = "#D9A528",
"cerberus" = "black"),
labels = c(expression(italic("C. viridis")),
expression(italic("C. concolor")),
expression(italic("C. cerberus")),
breaks = c("viridis", "concolor", "cerberus"))) +
labs(x = paste0("pos. on ", chrom, ' (Mb)'), y = "ATAC-seq read density") +
ggtitle("CTCF peak")
#p3 <-
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
annotate(geom = "rect",
xmin = rect$start,
xmax = rect$end,
ymin = -Inf,
ymax = +Inf,
alpha = 0.2) +
# geom_gene_arrow(data = example_genes, inherit.aes = F, aes(xmin = start, xmax = end, y = 40, fill="blue"), arrowhead_height = grid::unit(2, "mm"), arrow_body_height = grid::unit(1, "mm")) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
scale_x_continuous(limits = c(start_pos,end_pos), expand = c(0,0), labels = label_number(scale = 1e-6), breaks = pretty_breaks(n=3)) +
scale_y_continuous(breaks = pretty_breaks(n=2)) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
plot.margin = margin(10,5,5,5),
#strip.text.y = element_blank()
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
scale_fill_manual(values = c("viridis" = "#2E8B58",
"concolor" = "#D9A528",
"cerberus" = "black"),
labels = c(expression(italic("C. viridis")),
expression(italic("C. concolor")),
expression(italic("C. cerberus")),
breaks = c("viridis", "concolor", "cerberus"))) +
labs(x = paste0("pos. on ", chrom, ' (Mb)'), y = "ATAC-seq read density") +
ggtitle("CTCF peak")
library(scales)
#p3 <-
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
annotate(geom = "rect",
xmin = rect$start,
xmax = rect$end,
ymin = -Inf,
ymax = +Inf,
alpha = 0.2) +
# geom_gene_arrow(data = example_genes, inherit.aes = F, aes(xmin = start, xmax = end, y = 40, fill="blue"), arrowhead_height = grid::unit(2, "mm"), arrow_body_height = grid::unit(1, "mm")) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
scale_x_continuous(limits = c(start_pos,end_pos), expand = c(0,0), labels = label_number(scale = 1e-6), breaks = pretty_breaks(n=3)) +
scale_y_continuous(breaks = pretty_breaks(n=2)) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
plot.margin = margin(10,5,5,5),
#strip.text.y = element_blank()
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
scale_fill_manual(values = c("viridis" = "#2E8B58",
"concolor" = "#D9A528",
"cerberus" = "black"),
labels = c(expression(italic("C. viridis")),
expression(italic("C. concolor")),
expression(italic("C. cerberus")),
breaks = c("viridis", "concolor", "cerberus"))) +
labs(x = paste0("pos. on ", chrom, ' (Mb)'), y = "ATAC-seq read density") +
ggtitle("CTCF peak")
rect <- as.data.frame(peaks) %>%
filter(seqnames=='scaffold-mi2') %>%
select(start, end) %>%
mutate(start = start + peak_shift, end = end + peak_shift) %>%
# mutate(Type = 'CV1090') %>%
dplyr::slice(612, 713, 747) # 612 = de novo peak 1, 713 = de novo peak 2, 747 = CTCF peak
#p3 <-
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
annotate(geom = "rect",
xmin = rect$start,
xmax = rect$end,
ymin = -Inf,
ymax = +Inf,
alpha = 0.2) +
# geom_gene_arrow(data = example_genes, inherit.aes = F, aes(xmin = start, xmax = end, y = 40, fill="blue"), arrowhead_height = grid::unit(2, "mm"), arrow_body_height = grid::unit(1, "mm")) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
scale_x_continuous(limits = c(start_pos,end_pos), expand = c(0,0), labels = label_number(scale = 1e-6), breaks = pretty_breaks(n=3)) +
scale_y_continuous(breaks = pretty_breaks(n=2)) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
plot.margin = margin(10,5,5,5),
#strip.text.y = element_blank()
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
scale_fill_manual(values = c("viridis" = "#2E8B58",
"concolor" = "#D9A528",
"cerberus" = "black"),
labels = c(expression(italic("C. viridis")),
expression(italic("C. concolor")),
expression(italic("C. cerberus")),
breaks = c("viridis", "concolor", "cerberus"))) +
labs(x = paste0("pos. on ", chrom, ' (Mb)'), y = "ATAC-seq read density") +
ggtitle("CTCF peak")
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
theme(legend.position = "bottom",
legend.direction = "horizontal",
plot.margin = margin(10,5,5,5),
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = paste0("pos. on ", chrom, ' (Mb)'), y = "ATAC-seq read density") +
ggtitle("CTCF peak")
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
sample.meta
sample.meta <- data.frame(
stringsAsFactors = FALSE,
SampleName = c("CV0857_viridis_North_M.dedup.filtered.unique", "CV0985_concolor_Other_F.dedup.filtered.unique",
"CV1081_viridis_Mid_M.dedup.filtered.unique", "CV1082_viridis_South_M.dedup.filtered.unique",
"CV1086_viridis_South_M.dedup.filtered.unique", "CV1087_viridis_North_F.dedup.filtered.unique",
"CV1089_viridis_South_M.dedup.filtered.unique", "CV1090_cerberus_Other_M.dedup.filtered.unique",
"CV1095_viridis_North_M.dedup.filtered.unique")
)
sample.meta <- sample.meta %>%
mutate(SampleID = str_extract(SampleName, "^[^_]+")) %>%
mutate(Species = str_extract(SampleName, 'viridis|concolor|lutosus|cerberus')) %>%
filter(Species != 'lutosus') %>% # remove lutosus for now because its ATAC-seq quality is bad
#filter(Type != 'CV1096') %>% # remove CV1096 for now because we don't have a genome
arrange(match(Species, c('viridis', 'concolor', 'cerberus')))
sample.meta
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Soecies)) +
facet_wrap(~factor(Species, levels = sample.meta$Species), ncol = 1) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
track.df
# load regions of interest from bam files
chrom = "scaffold-mi2"
start_pos = floor(8923875 / 100 ) * 100 # denovopeak 1 8537054, denovopeak2 8852477,  CTCF peak 8923875
end_pos = ceiling(8924426 / 500 ) * 500 # denovopeak 1 8537582, denovopeak2 8852853,  CTCF peak 8924426
track.df = LoadTrackFile(track.folder = track.folder, format = "bam", # change to bam/bw
bamcoverage.path = '/Users/sidgopalan/miniconda3/bin/bamCoverage',
meta.info = sample.meta,
single.nuc = T, # change to T for BAM, F for BigWig
single.nuc.region = paste0(chrom, ':', start_pos, '-', end_pos) # short hand for getting a region, change "region" to single.nuc.region for BAM, "region" for
)
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Soecies)) +
facet_wrap(~factor(Species, levels = sample.meta$Species), ncol = 1) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(Species, levels = sample.meta$Species), ncol = 1) +
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
sample.meta
sample.meta$Species
track.df
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(Species, levels = sample.meta$Species), ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
sample.meta$Species
factor(Species, levels = sample.meta$Species)
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(Species, levels = unique(sample.meta$Species)), ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
# Add BAM info
sample.meta = data.frame(SampleName = gsub('.bam', '' , grep('bam$', list.files(track.folder), value = T))) # change from bw/bam
sample.meta <- data.frame(
stringsAsFactors = FALSE,
SampleName = c("CV0857_viridis_North_M.dedup.filtered.unique", "CV0985_concolor_Other_F.dedup.filtered.unique",
"CV1081_viridis_Mid_M.dedup.filtered.unique", "CV1082_viridis_South_M.dedup.filtered.unique",
"CV1086_viridis_South_M.dedup.filtered.unique", "CV1087_viridis_North_F.dedup.filtered.unique",
"CV1089_viridis_South_M.dedup.filtered.unique", "CV1090_cerberus_Other_M.dedup.filtered.unique",
"CV1095_viridis_North_M.dedup.filtered.unique")
)
sample.meta <- sample.meta %>%
mutate(Type = str_extract(SampleName, "^[^_]+")) %>%
mutate(Group = str_extract(SampleName, 'viridis|concolor|lutosus|cerberus')) %>%
filter(Group != 'lutosus') %>% # remove lutosus for now because its ATAC-seq quality is bad
#filter(Type != 'CV1096') %>% # remove CV1096 for now because we don't have a genome
arrange(match(Group, c('viridis', 'concolor', 'cerberus')))
# load regions of interest from bam files
chrom = "scaffold-mi2"
start_pos = floor(8923875 / 100 ) * 100 # denovopeak 1 8537054, denovopeak2 8852477,  CTCF peak 8923875
end_pos = ceiling(8924426 / 500 ) * 500 # denovopeak 1 8537582, denovopeak2 8852853,  CTCF peak 8924426
track.df = LoadTrackFile(track.folder = track.folder, format = "bam", # change to bam/bw
bamcoverage.path = '/Users/sidgopalan/miniconda3/bin/bamCoverage',
meta.info = sample.meta,
single.nuc = T, # change to T for BAM, F for BigWig
single.nuc.region = paste0(chrom, ':', start_pos, '-', end_pos) # short hand for getting a region, change "region" to single.nuc.region for BAM, "region" for
)
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Group)) +
facet_wrap(~factor(Type, levels = sample.meta$Type), ncol = 1, strip.position = "right") + # scales = "free_y"
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
View(sample.meta)
sample.meta <- sample.meta %>%
mutate(SampleID = str_extract(SampleName, "^[^_]+")) %>%
mutate(Species = str_extract(SampleName, 'viridis|concolor|lutosus|cerberus')) %>%
filter(Species != 'lutosus') %>% # remove lutosus for now because its ATAC-seq quality is bad
#filter(Type != 'CV1096') %>% # remove CV1096 for now because we don't have a genome
arrange(match(Species, c('viridis', 'concolor', 'cerberus')))
# load regions of interest from bam files
chrom = "scaffold-mi2"
start_pos = floor(8923875 / 100 ) * 100 # denovopeak 1 8537054, denovopeak2 8852477,  CTCF peak 8923875
end_pos = ceiling(8924426 / 500 ) * 500 # denovopeak 1 8537582, denovopeak2 8852853,  CTCF peak 8924426
track.df = LoadTrackFile(track.folder = track.folder, format = "bam", # change to bam/bw
bamcoverage.path = '/Users/sidgopalan/miniconda3/bin/bamCoverage',
meta.info = sample.meta,
single.nuc = T, # change to T for BAM, F for BigWig
single.nuc.region = paste0(chrom, ':', start_pos, '-', end_pos) # short hand for getting a region, change "region" to single.nuc.region for BAM, "region" for
)
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID), ncol = 1, strip.position = "right") + # scales = "free_y"
theme(legend.position = "bottom",
legend.direction = "horizontal",
) +
guides(fill = guide_legend(nrow = 1, title = NULL)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
png(filename = '/Users/sidgopalan/Documents/z_Other/Personal_Website/SidG13.github.io/assets/blog_files/basic_plot.png', res = 300, width = 750, height = 551)
dev.off()
dev.off()
# Basic plot
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
png(filename = '/Users/sidgopalan/Documents/z_Other/Personal_Website/SidG13.github.io/assets/blog_files/basic_plot.png', res = 300, width = 750, height = 551)
dev.off()
?png
dev.off()
# Basic plot
png(filename = '/Users/sidgopalan/Documents/z_Other/Personal_Website/SidG13.github.io/assets/blog_files/basic_plot.png', res = 300, width = 750, height = 551)
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
dev.off()
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
?png
# Basic plot
png(filename = '/Users/sidgopalan/Documents/z_Other/Personal_Website/SidG13.github.io/assets/blog_files/basic_plot.png', res = 300, width = 2.5, height = 1.8, units = 'in')
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
dev.off()
# Basic plot
png(filename = '/Users/sidgopalan/Documents/z_Other/Personal_Website/SidG13.github.io/assets/blog_files/basic_plot.png', res = 300, width = 7.8, height = 5.7, units = 'in')
ggplot() +
theme_minimal() +
geom_col(data = track.df, aes(x = start, y = score, fill = Species)) +
facet_wrap(~factor(SampleID, levels = sample.meta$SampleID)) +
labs(x = "Position on scaffold-mi2", y = "ATAC-seq read density") +
ggtitle("Regulatory region")
dev.off()
